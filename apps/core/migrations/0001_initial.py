# Generated by Django 5.2.4 on 2025-07-25 18:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MonitoringSystem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "system_type",
                    models.CharField(
                        choices=[
                            ("SAP", "SAP Sysstem"),
                            ("WMS", "Warehouse Management System"),
                            ("WINDOWS", "Windows Server"),
                            ("LINUX", "Linux Server"),
                            ("NETWORK", "Network Device"),
                        ],
                        max_length=50,
                    ),
                ),
                ("host", models.CharField(max_length=255)),
                ("port", models.IntegerField(blank=True, null=True)),
                ("connection_params", models.JSONField(default=dict)),
                ("status", models.CharField(default="active", max_length=20)),
                ("last_check", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Monitoring System",
                "verbose_name_plural": "Monitoring Systems",
            },
        ),
        migrations.CreateModel(
            name="Incident",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="OPEN",
                        max_length=20,
                    ),
                ),
                ("root_cause", models.TextField(blank=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.monitoringsystem",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PatternAnomaly",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("anomaly_type", models.CharField(max_length=50)),
                (
                    "confidence_score",
                    models.DecimalField(decimal_places=2, max_digits=3),
                ),
                (
                    "baseline_value",
                    models.DecimalField(decimal_places=4, max_digits=15, null=True),
                ),
                ("actual_value", models.DecimalField(decimal_places=4, max_digits=15)),
                (
                    "deviation_percent",
                    models.DecimalField(decimal_places=2, max_digits=5, null=True),
                ),
                ("detected_at", models.DateTimeField(auto_now_add=True)),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.monitoringsystem",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pattern Anomaly",
                "verbose_name_plural": "Pattern Anomalies",
                "ordering": ["-detected_at"],
            },
        ),
        migrations.CreateModel(
            name="Metric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("time", models.DateTimeField()),
                ("metric_name", models.CharField(max_length=100)),
                ("metric_value", models.DecimalField(decimal_places=4, max_digits=15)),
                ("tags", models.JSONField(default=dict)),
                ("unit", models.CharField(blank=True, max_length=20)),
                (
                    "system",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.monitoringsystem",
                    ),
                ),
            ],
            options={
                "db_table": "metrics",
                "ordering": ["-time"],
                "indexes": [
                    models.Index(
                        fields=["time", "system", "metric_name"],
                        name="metrics_time_908558_idx",
                    ),
                    models.Index(
                        fields=["metric_name", "time"],
                        name="metrics_metric__b21e93_idx",
                    ),
                ],
            },
        ),
    ]
